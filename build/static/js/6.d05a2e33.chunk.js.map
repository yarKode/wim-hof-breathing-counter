{"version":3,"sources":["Components/Assistant/PromptDisplay.jsx","Components/Assistant/InfoField.jsx","Components/Assistant/CountButton.jsx","Components/Assistant/NextButton.jsx","Components/Assistant/Counter.jsx","Components/Assistant/TimerFiled.jsx","helpers.js","Components/Assistant/Timer.jsx","Components/Assistant/ResetButton.jsx","Components/Assistant/Reset.jsx","Components/Assistant/Assistant.jsx"],"names":["PromptDisplay","phase","useContext","GlobalContext","state","className","PROMPTS","InfoField","displayCount","enabledUI","counter","CountButton","dispatch","onClick","type","payload","hideButtons","icon","faPlus","NextButton","timerStarted1","toggleTimer1","toggleTimer2","useState","enabled","setEnabled","enableTimerUI","useCallback","timerNumber","counterNext","timer1Display","timer1NextBtn","timer2Display","timer2NextBtn","disableAllUI","useLayoutEffect","count","MIN_COUNT","timer1","MIN_1ST_PHASE_BREATHE","timer2","MIN_2ND_PHASE_BREATHE","faArrowRight","Counter","TimerFiled","time","formattedTime","module","minutes","seconds","formatTimer","Timer","ResetButton","round","resetBtn","setTime1","setTime2","timerStarted2","resetUI","INIT_STATE","useEffect","uiStatesObj","Object","entries","map","el","includes","faPowerOff","style","backgroundColor","React","memo","Reset","Assistant","time1","time2"],"mappings":"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","file":"static/js/6.d05a2e33.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../Contexts/GlobalContext\";\nimport { PROMPTS } from \"../../settings\";\n\nexport default function PromptDisplay() {\n  const {\n    state: { phase },\n  } = useContext(GlobalContext);\n\n  return (\n    <div className=\"assistant-row guide-display\">\n      <p>{PROMPTS[phase]}</p>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../Contexts/GlobalContext\";\n\nexport default function InfoField({ displayCount }) {\n  const { state } = useContext(GlobalContext);\n  return (\n    <div\n      className={\n        state.enabledUI.counter ? \"assistant-el\" : \"assistant-el-disabled\"\n      }\n    >\n      <p>{displayCount < 10 ? `0${displayCount}` : `${displayCount}`}</p>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { GlobalContext } from \"../../Contexts/GlobalContext\";\n\nexport default function CountButton() {\n  const { dispatch, state } = useContext(GlobalContext);\n\n  function countClickHandler() {\n    dispatch({ type: \"Count\", payload: 1 });\n    if (state.hideButtons) dispatch({ type: \"HideBtns\", payload: false });\n  }\n  return (\n    <div\n      onClick={countClickHandler}\n      className={\n        state.enabledUI.counter\n          ? \"assistant-el assistant-btn\"\n          : \"assistant-el assistant-btn-disabled\"\n      }\n    >\n      <FontAwesomeIcon icon={faPlus} />\n    </div>\n  );\n}\n","import React, {\n  useContext,\n  useLayoutEffect,\n  useState,\n  useCallback,\n} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { GlobalContext } from \"../../Contexts/GlobalContext\";\nimport {\n  MIN_1ST_PHASE_BREATHE,\n  MIN_2ND_PHASE_BREATHE,\n  MIN_COUNT,\n} from \"../../settings\";\n\nexport default function NextButton({ type }) {\n  const { timerStarted1, toggleTimer1, toggleTimer2, state, dispatch } =\n    useContext(GlobalContext);\n\n  const [enabled, setEnabled] = useState(() => false);\n\n  const enableTimerUI = useCallback(\n    (timerNumber) => {\n      dispatch({\n        type: \"ChangeUI\",\n        payload: {\n          counter: false,\n          counterNext: false,\n          timer1Display: timerNumber === 1 ? true : false,\n          timer1NextBtn: timerNumber === 1 ? true : false,\n          timer2Display: timerNumber === 1 ? false : true,\n          timer2NextBtn: timerNumber === 1 ? false : true,\n        },\n      });\n    },\n    [dispatch]\n  );\n\n  const disableAllUI = useCallback(() => {\n    dispatch({\n      type: \"ChangeUI\",\n      payload: {\n        timer2Display: false,\n        timer2NextBtn: false,\n      },\n    });\n  }, [dispatch]);\n\n  function clickHandler() {\n    dispatch({ type: \"NextPhase\", payload: 1 });\n    if (type === \"timer1\") {\n      toggleTimer1();\n      enableTimerUI(1);\n    } else if (type === \"timer2\") {\n      if (timerStarted1) toggleTimer1();\n      toggleTimer2();\n      enableTimerUI(2);\n    } else if (type === \"stopTimer\") {\n      toggleTimer2();\n      disableAllUI();\n    }\n  }\n\n  useLayoutEffect(() => {\n    if (state.hideButtons) {\n      setEnabled(false);\n      return;\n    }\n    if (type === \"timer1\" && state.count > MIN_COUNT) {\n      setEnabled(state.enabledUI.counterNext);\n    }\n\n    if (type === \"timer2\" && state.timer1 > MIN_1ST_PHASE_BREATHE)\n      setEnabled(state.enabledUI.timer1NextBtn);\n    if (type === \"stopTimer\" && state.timer2 > MIN_2ND_PHASE_BREATHE)\n      setEnabled(state.enabledUI.timer2NextBtn);\n  }, [state, dispatch, type]);\n\n  return (\n    <button\n      className={enabled ? \"assistant-btn\" : \"assistant-btn-disabled\"}\n      onClick={() => clickHandler()}\n    >\n      <FontAwesomeIcon icon={faArrowRight} />\n    </button>\n  );\n}\n","import React, { useContext } from \"react\";\nimport InfoField from \"./InfoField\";\nimport CountButton from \"./CountButton\";\nimport NextButton from \"./NextButton\";\nimport { GlobalContext } from \"../../Contexts/GlobalContext\";\n\nexport default function Counter({ type }) {\n  const { state } = useContext(GlobalContext);\n\n  return (\n    <div className=\"assistant-row\">\n      <InfoField displayCount={state.count} />\n      <CountButton />\n      <NextButton type={type} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { formatTimer } from \"../../helpers\";\n\nexport default function TimerFiled({ time, enabled = false }) {\n  const formattedTime = formatTimer(time);\n\n  return (\n    <div\n      className={\n        enabled\n          ? \"double-square assistant-el\"\n          : \"double-square assistant-el-disabled\"\n      }\n    >\n      <p>{formattedTime}</p>\n    </div>\n  );\n}\n","export function uiStatus(uiStatesObj) {\n  const arrOfUIStates = Object.entries(uiStatesObj);\n  return !arrOfUIStates.map((el) => el[1]).includes(true);\n}\n\nexport function formatTimer(time) {\n  if (time < 10) return `00:0${time}`;\n  if (time < 60) return `00:${time}`;\n  const module = time % 60;\n  const minutes = (time - module) / 60;\n  const seconds = module < 10 ? `0${module}` : `${module}`;\n  return `0${minutes}:${seconds}`;\n}\n","import React, { useContext } from \"react\";\nimport TimerFiled from \"./TimerFiled\";\nimport NextButton from \"./NextButton\";\nimport { GlobalContext } from \"../../Contexts/GlobalContext\";\n\nexport default function Timer({ time, type }) {\n  const { state } = useContext(GlobalContext);\n  return (\n    <div className=\"container assistant-row\">\n      <TimerFiled\n        time={time}\n        enabled={\n          type === \"timer2\"\n            ? state.enabledUI.timer1Display\n            : state.enabledUI.timer2Display\n        }\n      />\n      <NextButton type={type} />\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../../Contexts/GlobalContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPowerOff } from \"@fortawesome/free-solid-svg-icons\";\nimport { uiStatus } from \"../../helpers\";\n\nimport { INIT_STATE } from \"../../settings\";\n\nfunction ResetButton({ type }) {\n  const {\n    state: { round, enabledUI, resetBtn },\n    dispatch,\n    setTime1,\n    setTime2,\n    timerStarted1,\n    timerStarted2,\n    toggleTimer1,\n    toggleTimer2,\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    const uiDisabled = uiStatus(enabledUI);\n\n    if (uiDisabled) dispatch({ type: \"ChangeResetBtn\", payload: \"StartNew\" });\n  }, [dispatch, enabledUI]);\n\n  function resetUI() {\n    setTime1(0);\n    setTime2(0);\n    timerStarted1 && toggleTimer1();\n    timerStarted2 && toggleTimer2();\n\n    dispatch({\n      type: \"Reset\",\n      payload: {\n        ...INIT_STATE,\n        hideButtons: true,\n        round:\n          type === \"restart\" ? 1 : resetBtn === \"Reset\" ? round : round + 1,\n      },\n    });\n  }\n\n  if (type === \"restart\") {\n    return (\n      <div className=\"assistant-btn reset-btn\" onClick={resetUI}>\n        <FontAwesomeIcon icon={faPowerOff} />\n      </div>\n    );\n  }\n\n  if (type === \"reset\" && resetBtn === \"StartNew\") {\n    return (\n      <div\n        style={{ backgroundColor: \"#3c6204\" }}\n        className=\"double-square assistant-el assistant-btn reset-btn\"\n        onClick={resetUI}\n      >\n        <p>\n          Start Round #<span>{round + 1}</span>\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className=\"double-square assistant-el assistant-btn reset-btn\"\n      onClick={resetUI}\n    >\n      <p>\n        Reset Round #<span>{round}</span>\n      </p>\n    </div>\n  );\n}\n\nexport default ResetButton = React.memo(ResetButton);\n","import React from \"react\";\nimport ResetButton from \"./ResetButton\";\n\nfunction Reset() {\n  return (\n    <div className=\"assistant-row\">\n      <ResetButton type={\"reset\"} />\n      <ResetButton type={\"restart\"} />\n    </div>\n  );\n}\n\nexport default Reset = React.memo(Reset);\n","import React, { useEffect, useContext } from \"react\";\nimport PromptDisplay from \"./PromptDisplay\";\nimport Counter from \"./Counter\";\nimport Timer from \"./Timer\";\nimport Reset from \"./Reset\";\n\nimport { GlobalContext } from \"../../Contexts/GlobalContext\";\n\nexport default function Assistant() {\n  const { time1, time2, state, dispatch } = useContext(GlobalContext);\n\n  useEffect(() => {\n    dispatch({ type: \"StartTimer1\", payload: time1 });\n  }, [dispatch, time1]);\n\n  useEffect(() => {\n    dispatch({ type: \"StartTimer2\", payload: time2 });\n  }, [dispatch, time2]);\n\n  return (\n    <div className=\"page-container\">\n      <PromptDisplay />\n      <Counter type={\"timer1\"} />\n      <Timer time={state.timer1} type={\"timer2\"} />\n      <Timer time={state.timer2} type={\"stopTimer\"} />\n      <Reset />\n    </div>\n  );\n}\n"],"sourceRoot":""}